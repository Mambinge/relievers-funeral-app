{"ast":null,"code":"var SharedModule_1;\nimport { __decorate, __param } from \"tslib\";\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { _environment } from './models';\nimport { AuthService } from './services';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HTTPListener, HTTPStatus } from './services/http-interceptor';\nimport { AuthGuard } from './guard/auth-guard';\nexport let SharedModule = SharedModule_1 = class SharedModule {\n  constructor(parentModule) {\n    throwIfAlreadyLoaded(parentModule, 'SharedModule');\n  }\n  static forRoot(config) {\n    return {\n      ngModule: SharedModule_1,\n      providers: [{\n        provide: _environment,\n        useValue: config\n      }]\n    };\n  }\n};\nSharedModule = SharedModule_1 = __decorate([NgModule({\n  exports: [],\n  declarations: [],\n  imports: [CommonModule, JwtModule.forRoot({\n    config: {\n      tokenGetter: token,\n      skipWhenExpired: true\n    }\n  })],\n  providers: [AuthGuard, HTTPListener, HTTPStatus, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HTTPListener,\n    multi: true\n  }]\n}), __param(0, Optional()), __param(0, SkipSelf())], SharedModule);\nfunction throwIfAlreadyLoaded(parentModule, moduleName) {\n  if (!parentModule) return;\n  throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n}\nexport function token() {\n  return AuthService.TOKEN;\n}","map":{"version":3,"names":["NgModule","Optional","SkipSelf","CommonModule","JwtModule","_environment","AuthService","HTTP_INTERCEPTORS","HTTPListener","HTTPStatus","AuthGuard","SharedModule","SharedModule_1","constructor","parentModule","throwIfAlreadyLoaded","forRoot","config","ngModule","providers","provide","useValue","__decorate","exports","declarations","imports","tokenGetter","token","skipWhenExpired","useClass","multi","__param","moduleName","Error","TOKEN"],"sources":["C:\\Users\\mambi\\OneDrive\\Documents\\Personal\\Angular\\richo\\relievers-funeral-app\\src\\app\\shared\\shared.module.ts"],"sourcesContent":["import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { EnvironmentInterface, _environment } from './models';\r\nimport { AuthService } from './services';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HTTPListener, HTTPStatus } from './services/http-interceptor';\r\nimport { AuthGuard } from './guard/auth-guard';\r\n\r\n@NgModule({\r\n  exports: [\r\n\r\n  ],\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    JwtModule.forRoot({\r\n      config: { tokenGetter: token, skipWhenExpired: true }\r\n    }),\r\n  ],\r\n  providers:[\r\n    AuthGuard,\r\n    HTTPListener,\r\n    HTTPStatus,\r\n    { provide: HTTP_INTERCEPTORS, useClass: HTTPListener, multi: true },\r\n\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: SharedModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'SharedModule');\r\n  }\r\n\r\n  static forRoot(config: EnvironmentInterface): ModuleWithProviders<SharedModule> {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        {\r\n          provide: _environment,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\nfunction throwIfAlreadyLoaded(parentModule: unknown, moduleName: string) {\r\n  if (!parentModule) return;\r\n  throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n}\r\n\r\nexport function token(): string {\r\n  return AuthService.TOKEN;\r\n}\r\n"],"mappings":";;AAAA,SAA8BA,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AACjF,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAA+BC,YAAY,QAAQ,UAAU;AAC7D,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,YAAY,EAAEC,UAAU,QAAQ,6BAA6B;AACtE,SAASC,SAAS,QAAQ,oBAAoB;AAqBvC,WAAMC,YAAY,GAAAC,cAAA,GAAlB,MAAMD,YAAY;EACvBE,YAAoCC,YAA0B;IAC5DC,oBAAoB,CAACD,YAAY,EAAE,cAAc,CAAC;EACpD;EAEA,OAAOE,OAAOA,CAACC,MAA4B;IACzC,OAAO;MACLC,QAAQ,EAAEN,cAAY;MACtBO,SAAS,EAAE,CACT;QACEC,OAAO,EAAEf,YAAY;QACrBgB,QAAQ,EAAEJ;OACX;KAEJ;EACH;CACD;AAhBYN,YAAY,GAAAC,cAAA,GAAAU,UAAA,EAnBxBtB,QAAQ,CAAC;EACRuB,OAAO,EAAE,EAER;EACDC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,CACPtB,YAAY,EACZC,SAAS,CAACY,OAAO,CAAC;IAChBC,MAAM,EAAE;MAAES,WAAW,EAAEC,KAAK;MAAEC,eAAe,EAAE;IAAI;GACpD,CAAC,CACH;EACDT,SAAS,EAAC,CACRT,SAAS,EACTF,YAAY,EACZC,UAAU,EACV;IAAEW,OAAO,EAAEb,iBAAiB;IAAEsB,QAAQ,EAAErB,YAAY;IAAEsB,KAAK,EAAE;EAAI,CAAE;CAGtE,CAAC,EAEaC,OAAA,IAAA9B,QAAQ,EAAE,GAAE8B,OAAA,IAAA7B,QAAQ,EAAE,E,EADxBS,YAAY,CAgBxB;AACD,SAASI,oBAAoBA,CAACD,YAAqB,EAAEkB,UAAkB;EACrE,IAAI,CAAClB,YAAY,EAAE;EACnB,MAAM,IAAImB,KAAK,CAAC,GAAGD,UAAU,sEAAsE,CAAC;AACtG;AAEA,OAAM,SAAUL,KAAKA,CAAA;EACnB,OAAOrB,WAAW,CAAC4B,KAAK;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}