{"ast":null,"code":"import { catchError, empty, map } from 'rxjs';\nexport class DefaultService {\n  getAll(url) {\n    return this.defaultHttpClient.get(`${this.baseUrl}${url}`).pipe(catchError(() => empty()));\n  }\n  getFromUrl(url) {\n    return this.defaultHttpClient.get(`${this.baseUrl}${url}`).pipe(catchError(() => empty()));\n  }\n  get(id, body) {\n    return this.getFromUrl(`${id}`);\n  }\n  post(body) {\n    return this.postToUrl('', body);\n  }\n  postToUrl(url, body) {\n    return this.defaultHttpClient.post(`${this.baseUrl}${url}`, body, {\n      observe: 'response'\n    }).pipe(map(response => response.body));\n  }\n  update(body) {\n    return this.updateToUrl('', body);\n  }\n  updateToUrl(url, body) {\n    return this.defaultHttpClient.put(`${this.baseUrl}${url}`, body, {\n      observe: 'response'\n    }).pipe(map(response => response.body));\n  }\n  delete(url) {\n    return this.defaultHttpClient.delete(`${this.baseUrl}${url}`, {\n      observe: 'response'\n    }).pipe(map(response => response.body));\n  }\n  search(parameter) {\n    return this.getFromUrl(`?${parameter}`);\n  }\n  constructor(defaultHttpClient, baseUrl) {\n    this.defaultHttpClient = defaultHttpClient;\n    this.baseUrl = baseUrl;\n  }\n}","map":{"version":3,"names":["catchError","empty","map","DefaultService","getAll","url","defaultHttpClient","get","baseUrl","pipe","getFromUrl","id","body","post","postToUrl","observe","response","update","updateToUrl","put","delete","search","parameter","constructor"],"sources":["C:\\Users\\mambi\\OneDrive\\Documents\\Personal\\Angular\\richo\\relievers-funeral-app\\src\\app\\shared\\services\\default.service.ts"],"sourcesContent":["import { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, empty, map } from 'rxjs';\r\n\r\n\r\nexport class DefaultService<T> {\r\n\r\n  public getAll(url:string): Observable<any> {\r\n    return this.defaultHttpClient.get<any[]>(`${this.baseUrl}${url}`)\r\n      .pipe(catchError(() => empty())); \r\n    }\r\n\r\n\r\n\r\n  public getFromUrl(url: string): Observable<any> {\r\n    return this.defaultHttpClient.get(`${this.baseUrl}${url}`)\r\n      .pipe(catchError(() => empty()));\r\n  }\r\n\r\n\r\n\r\n  public get(id: number | string,body:any): Observable<T> {\r\n    return this.getFromUrl(`${id}`);\r\n  }\r\n\r\n  public post(body: T): Observable<any> {\r\n    return this.postToUrl('', body);\r\n  }\r\n\r\n  public postToUrl(url: string, body: any): Observable<any> {\r\n    return this.defaultHttpClient.post(`${this.baseUrl}${url}`, body, {\r\n      observe: 'response'\r\n    }).pipe(map((response: HttpResponse<any>) => response.body));\r\n  }\r\n\r\n  public update(body: T): Observable<any> {\r\n    return this.updateToUrl('', body);\r\n  }\r\n\r\n  public updateToUrl(url: string, body: any): Observable<any> {\r\n    return this.defaultHttpClient.put(`${this.baseUrl}${url}`, body, {\r\n      observe: 'response'\r\n    }).pipe(map((response: HttpResponse<any>) => response.body));\r\n  }\r\n\r\n\r\n  public delete(url: string): Observable<any> {\r\n    return this.defaultHttpClient.delete(`${this.baseUrl}${url}`, {\r\n      observe: 'response'\r\n    }).pipe(map((response: HttpResponse<any>) => response.body));\r\n  }\r\n\r\n  public search(parameter: any): Observable<T> {\r\n    return this.getFromUrl(`?${parameter}`);\r\n  }\r\n\r\n  constructor(public defaultHttpClient: HttpClient, public baseUrl: string) {\r\n\r\n   }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,KAAK,EAAEC,GAAG,QAAQ,MAAM;AAGzD,OAAM,MAAOC,cAAc;EAElBC,MAAMA,CAACC,GAAU;IACtB,OAAO,IAAI,CAACC,iBAAiB,CAACC,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,GAAGH,GAAG,EAAE,CAAC,CAC9DI,IAAI,CAACT,UAAU,CAAC,MAAMC,KAAK,EAAE,CAAC,CAAC;EAClC;EAIKS,UAAUA,CAACL,GAAW;IAC3B,OAAO,IAAI,CAACC,iBAAiB,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,GAAGH,GAAG,EAAE,CAAC,CACvDI,IAAI,CAACT,UAAU,CAAC,MAAMC,KAAK,EAAE,CAAC,CAAC;EACpC;EAIOM,GAAGA,CAACI,EAAmB,EAACC,IAAQ;IACrC,OAAO,IAAI,CAACF,UAAU,CAAC,GAAGC,EAAE,EAAE,CAAC;EACjC;EAEOE,IAAIA,CAACD,IAAO;IACjB,OAAO,IAAI,CAACE,SAAS,CAAC,EAAE,EAAEF,IAAI,CAAC;EACjC;EAEOE,SAASA,CAACT,GAAW,EAAEO,IAAS;IACrC,OAAO,IAAI,CAACN,iBAAiB,CAACO,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,GAAGH,GAAG,EAAE,EAAEO,IAAI,EAAE;MAChEG,OAAO,EAAE;KACV,CAAC,CAACN,IAAI,CAACP,GAAG,CAAEc,QAA2B,IAAKA,QAAQ,CAACJ,IAAI,CAAC,CAAC;EAC9D;EAEOK,MAAMA,CAACL,IAAO;IACnB,OAAO,IAAI,CAACM,WAAW,CAAC,EAAE,EAAEN,IAAI,CAAC;EACnC;EAEOM,WAAWA,CAACb,GAAW,EAAEO,IAAS;IACvC,OAAO,IAAI,CAACN,iBAAiB,CAACa,GAAG,CAAC,GAAG,IAAI,CAACX,OAAO,GAAGH,GAAG,EAAE,EAAEO,IAAI,EAAE;MAC/DG,OAAO,EAAE;KACV,CAAC,CAACN,IAAI,CAACP,GAAG,CAAEc,QAA2B,IAAKA,QAAQ,CAACJ,IAAI,CAAC,CAAC;EAC9D;EAGOQ,MAAMA,CAACf,GAAW;IACvB,OAAO,IAAI,CAACC,iBAAiB,CAACc,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,GAAGH,GAAG,EAAE,EAAE;MAC5DU,OAAO,EAAE;KACV,CAAC,CAACN,IAAI,CAACP,GAAG,CAAEc,QAA2B,IAAKA,QAAQ,CAACJ,IAAI,CAAC,CAAC;EAC9D;EAEOS,MAAMA,CAACC,SAAc;IAC1B,OAAO,IAAI,CAACZ,UAAU,CAAC,IAAIY,SAAS,EAAE,CAAC;EACzC;EAEAC,YAAmBjB,iBAA6B,EAASE,OAAe;IAArD,KAAAF,iBAAiB,GAAjBA,iBAAiB;IAAqB,KAAAE,OAAO,GAAPA,OAAO;EAE/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}