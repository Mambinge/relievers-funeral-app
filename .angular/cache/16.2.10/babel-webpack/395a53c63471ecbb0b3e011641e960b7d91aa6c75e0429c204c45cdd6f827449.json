{"ast":null,"code":"import { Status } from 'src/app/models/policy-status';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/shared/services\";\nimport * as i5 from \"@angular/common\";\nfunction UpdateWorkStagesComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const workFlow_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", workFlow_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(workFlow_r2.name);\n  }\n}\nfunction UpdateWorkStagesComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r3);\n  }\n}\nexport let UpdateWorkStagesComponent = /*#__PURE__*/(() => {\n  class UpdateWorkStagesComponent {\n    constructor(spinner, route, router, fb, service) {\n      this.spinner = spinner;\n      this.route = route;\n      this.router = router;\n      this.fb = fb;\n      this.service = service;\n      this.statusOptions = Object.values(Status);\n      this.workFlowOptions = [];\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        const workId = params['id'];\n        this.workId = workId;\n        this.work = this.fetchworkFlow(workId);\n      });\n      this.workFlowForm = this.fb.group({\n        workFlowId: '',\n        name: '',\n        order: '',\n        requiredRoles: '',\n        requiredPermissions: '',\n        status: ''\n      });\n      this.service.getAll('workflows').subscribe(data => {\n        this.workFlowOptions = data.content;\n      });\n    }\n    ngOnChanges(changes) {\n      if ('workFlowId' in changes) {\n        this.fetchworkFlow(this.workFlowId);\n      }\n    }\n    fetchworkFlow(workFlowId) {\n      if (workFlowId) {\n        this.service.getFromUrl(`policies/${workFlowId}`).subscribe(res => {\n          this.workFlowData = res;\n          this.workFlowForm.patchValue({\n            name: this.workFlowData.name,\n            description: this.workFlowData.description,\n            status: this.workFlowData.status\n          });\n        });\n      }\n    }\n    onSubmit(event) {\n      event.preventDefault();\n      if (this.workFlowForm.valid) {\n        this.spinner.show();\n        this.service.updateToUrl(`workflow-stages/${this.workFlowId}`, this.workFlowForm.value).subscribe(res => {\n          this.data = res;\n          this.spinner.hide();\n          this.router.navigate(['/work-flows-stage']);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function UpdateWorkStagesComponent_Factory(t) {\n      return new (t || UpdateWorkStagesComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ApiService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateWorkStagesComponent,\n      selectors: [[\"app-update-work-stages\"]],\n      inputs: {\n        workFlowId: \"workFlowId\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 46,\n      vars: 3,\n      consts: [[1, \"flex\", \"justify-between\", \"items-center\"], [1, \"text-xl\", \"text-gray-900\", \"dark:text-white\", \"font-bold\"], [\"aria-label\", \"Breadcrumb\", 1, \"flex\", \"py-1\", \"text-gray-700\"], [1, \"inline-flex\", \"items-center\", \"space-x-1\", \"md:space-x-2\", \"rtl:space-x-reverse\"], [\"aria-current\", \"page\"], [1, \"flex\", \"items-center\"], [\"href\", \"/work-flows-stage\"], [1, \"ms-1\", \"text-sm\", \"font-small\", \"text-gray-500\", \"md:ms-2\", \"dark:text-gray-400\"], [\"aria-hidden\", \"true\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 6 10\", 1, \"rtl:rotate-180\", \"w-3\", \"h-3\", \"mx-1\", \"text-gray-400\"], [\"stroke\", \"currentColor\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"m1 9 4-4-4-4\"], [1, \"mt-5\", \"relative\", \"bg-white\", \"rounded-lg\", \"shadow\", \"dark:bg-gray-700\"], [1, \"p-4\", \"md:p-5\", 3, \"formGroup\", \"submit\"], [1, \"grid\", \"gap-6\", \"mb-6\", \"md:grid-cols-2\"], [1, \"col-span-2\"], [\"for\", \"status\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"formControlName\", \"workFlowId\", \"id\", \"status\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"name\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"text\", \"formControlName\", \"name\", \"name\", \"name\", \"id\", \"name\", \"placeholder\", \"Type name\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-primary-600\", \"focus:border-primary-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-primary-500\", \"dark:focus:border-primary-500\"], [\"type\", \"number\", \"formControlName\", \"order\", \"name\", \"order\", \"id\", \"order\", \"placeholder\", \"Type order\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-primary-600\", \"focus:border-primary-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-primary-500\", \"dark:focus:border-primary-500\"], [1, \"col-span-2\", \"sm:col-span-1\"], [\"type\", \"text\", \"formControlName\", \"requiredRoles\", \"name\", \"requiredRoles\", \"id\", \"order\", \"placeholder\", \"Type role\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-primary-600\", \"focus:border-primary-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-primary-500\", \"dark:focus:border-primary-500\"], [\"type\", \"text\", \"formControlName\", \"requiredPermissions\", \"name\", \"requiredPermissions\", \"id\", \"order\", \"placeholder\", \"Type permission\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-primary-600\", \"focus:border-primary-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-primary-500\", \"dark:focus:border-primary-500\"], [\"formControlName\", \"status\", \"id\", \"status\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [\"type\", \"submit\", 1, \"text-white\", \"inline-flex\", \"items-center\", \"bg-purple-700\", \"hover:bg-purple-800\", \"focus:ring-4\", \"focus:outline-none\", \"focus:ring-blue-300\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"px-5\", \"py-2\", \"text-center\", \"dark:bg-blue-600\", \"dark:hover:bg-blue-700\", \"dark:focus:ring-blue-800\"], [\"fill\", \"currentColor\", \"viewBox\", \"0 0 20 20\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"me-1\", \"-ms-1\", \"w-5\", \"h-5\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\", \"clip-rule\", \"evenodd\"], [3, \"value\"]],\n      template: function UpdateWorkStagesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n          i0.ɵɵtext(2, \" Update Work Stage \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"nav\", 2)(4, \"ol\", 3)(5, \"li\", 4)(6, \"div\", 5)(7, \"a\", 6)(8, \"span\", 7);\n          i0.ɵɵtext(9, \"Previous Page\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(10, \"svg\", 8);\n          i0.ɵɵelement(11, \"path\", 9);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(12, \"div\")(13, \"div\", 10)(14, \"form\", 11);\n          i0.ɵɵlistener(\"submit\", function UpdateWorkStagesComponent_Template_form_submit_14_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13)(17, \"label\", 14);\n          i0.ɵɵtext(18, \"Select Work Flow\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 15);\n          i0.ɵɵtemplate(20, UpdateWorkStagesComponent_option_20_Template, 2, 2, \"option\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 17);\n          i0.ɵɵtext(23, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 13)(26, \"label\", 17);\n          i0.ɵɵtext(27, \"Order\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 20)(30, \"label\", 17);\n          i0.ɵɵtext(31, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"input\", 21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 20)(34, \"label\", 17);\n          i0.ɵɵtext(35, \"Permissions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(36, \"input\", 22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 13)(38, \"label\", 14);\n          i0.ɵɵtext(39, \"Select status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"select\", 23);\n          i0.ɵɵtemplate(41, UpdateWorkStagesComponent_option_41_Template, 2, 2, \"option\", 16);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(42, \"button\", 24);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(43, \"svg\", 25);\n          i0.ɵɵelement(44, \"path\", 26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(45, \" Update \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"formGroup\", ctx.workFlowForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.workFlowOptions);\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"ngForOf\", ctx.statusOptions);\n        }\n      },\n      dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n  return UpdateWorkStagesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}