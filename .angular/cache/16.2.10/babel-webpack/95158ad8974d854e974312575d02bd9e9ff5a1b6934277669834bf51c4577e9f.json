{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nexport class AuthService {\n  static #_ = this.NAME = 'token';\n  static #_2 = this.USER = 'user';\n  constructor(jwtHelper) {\n    this.jwtHelper = jwtHelper;\n    this.userAction = new Subject();\n    this.token = AuthService.TOKEN = this.getToken();\n    this.setTokenPayload(this.token);\n    if (!this.tokenPayload) return;\n    this.permissions = this.tokenPayload.authorities;\n  }\n  getTokenPayload(token) {\n    return this.jwtHelper.decodeToken(token);\n    sessionStorage.setItem('user', JSON.stringify(token));\n  }\n  setTokenPayload(token) {\n    this.tokenPayload = this.getTokenPayload(token);\n    if (this.tokenPayload) return;\n    const data = {};\n    this.tokenPayload = data;\n  }\n  isAuthenticated() {\n    return !this.jwtHelper.isTokenExpired(this.token);\n  }\n  saveToken(token) {\n    sessionStorage.setItem(AuthService.NAME, token);\n    const userDetails = this.jwtHelper.decodeToken(token ? token : '');\n    sessionStorage.setItem(AuthService.USER, JSON.stringify(userDetails.resource_access.Frontend));\n  }\n  getToken() {\n    return sessionStorage.getItem(AuthService.NAME);\n  }\n  clearToken() {\n    sessionStorage.clear();\n  }\n  get getAction() {\n    return this.userAction.asObservable();\n  }\n  loadAction() {\n    this.userAction.next();\n  }\n  getUser() {\n    const userString = sessionStorage.getItem(AuthService.USER) ?? '{}';\n    return JSON.parse(userString);\n  }\n  static #_3 = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.JwtHelperService));\n  };\n  static #_4 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","AuthService","_","NAME","_2","USER","constructor","jwtHelper","userAction","token","TOKEN","getToken","setTokenPayload","tokenPayload","permissions","authorities","getTokenPayload","decodeToken","sessionStorage","setItem","JSON","stringify","data","isAuthenticated","isTokenExpired","saveToken","userDetails","resource_access","Frontend","getItem","clearToken","clear","getAction","asObservable","loadAction","next","getUser","userString","parse","_3","i0","ɵɵinject","i1","JwtHelperService","_4","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mambi\\OneDrive\\Documents\\Personal\\Angular\\richo\\relievers-funeral-app\\src\\app\\shared\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { TokenPayload } from '../models';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  static NAME = 'token';\r\n  static TOKEN: string;\r\n  static USER = 'user';\r\n  public token!: string;\r\n  tokenPayload: TokenPayload | undefined;\r\n  username!: string;\r\n  userAction: Subject<void> = new Subject();\r\n  permissions!: any[] ;\r\n\r\n  constructor(public jwtHelper: JwtHelperService) {\r\n    this.token = AuthService.TOKEN = <string>this.getToken();\r\n    this.setTokenPayload(this.token);\r\n    if (!this.tokenPayload) return;\r\n    this.permissions = this.tokenPayload.authorities;\r\n  }\r\n\r\n  public getTokenPayload(token: string) {\r\n    return this.jwtHelper.decodeToken(token);\r\n    sessionStorage.setItem('user', JSON.stringify(token));\r\n  }\r\n\r\n  public setTokenPayload(token: string) {\r\n    this.tokenPayload = this.getTokenPayload(token);\r\n    if (this.tokenPayload) return;\r\n    const data: any = {};\r\n    this.tokenPayload = data;\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    return !this.jwtHelper.isTokenExpired(this.token);\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    sessionStorage.setItem(AuthService.NAME, token);\r\n    const userDetails = this.jwtHelper.decodeToken(token ? token :'');\r\n    sessionStorage.setItem(AuthService.USER, JSON.stringify(userDetails.resource_access.Frontend));\r\n  }\r\n\r\n  public getToken() {\r\n    return sessionStorage.getItem(AuthService.NAME);\r\n  }\r\n\r\n  public clearToken() {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  get getAction(): Observable<void> {\r\n    return this.userAction.asObservable();\r\n  };\r\n\r\n  loadAction() {\r\n    this.userAction.next();\r\n  }\r\n  public getUser(){\r\n    const userString = sessionStorage.getItem(AuthService.USER) ?? '{}';\r\n    return JSON.parse(userString);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,OAAO,QAAQ,MAAM;;;AAO1C,OAAM,MAAOC,WAAW;EAAA,QAAAC,CAAA,GAEf,KAAAC,IAAI,GAAG,OAAO;EAAA,QAAAC,EAAA,GAEd,KAAAC,IAAI,GAAG,MAAM;EAOpBC,YAAmBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAH5B,KAAAC,UAAU,GAAkB,IAAIR,OAAO,EAAE;IAIvC,IAAI,CAACS,KAAK,GAAGR,WAAW,CAACS,KAAK,GAAW,IAAI,CAACC,QAAQ,EAAE;IACxD,IAAI,CAACC,eAAe,CAAC,IAAI,CAACH,KAAK,CAAC;IAChC,IAAI,CAAC,IAAI,CAACI,YAAY,EAAE;IACxB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACD,YAAY,CAACE,WAAW;EAClD;EAEOC,eAAeA,CAACP,KAAa;IAClC,OAAO,IAAI,CAACF,SAAS,CAACU,WAAW,CAACR,KAAK,CAAC;IACxCS,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAAC,CAAC;EACvD;EAEOG,eAAeA,CAACH,KAAa;IAClC,IAAI,CAACI,YAAY,GAAG,IAAI,CAACG,eAAe,CAACP,KAAK,CAAC;IAC/C,IAAI,IAAI,CAACI,YAAY,EAAE;IACvB,MAAMS,IAAI,GAAQ,EAAE;IACpB,IAAI,CAACT,YAAY,GAAGS,IAAI;EAC1B;EAEOC,eAAeA,CAAA;IACpB,OAAO,CAAC,IAAI,CAAChB,SAAS,CAACiB,cAAc,CAAC,IAAI,CAACf,KAAK,CAAC;EACnD;EAEOgB,SAASA,CAAChB,KAAa;IAC5BS,cAAc,CAACC,OAAO,CAAClB,WAAW,CAACE,IAAI,EAAEM,KAAK,CAAC;IAC/C,MAAMiB,WAAW,GAAG,IAAI,CAACnB,SAAS,CAACU,WAAW,CAACR,KAAK,GAAGA,KAAK,GAAE,EAAE,CAAC;IACjES,cAAc,CAACC,OAAO,CAAClB,WAAW,CAACI,IAAI,EAAEe,IAAI,CAACC,SAAS,CAACK,WAAW,CAACC,eAAe,CAACC,QAAQ,CAAC,CAAC;EAChG;EAEOjB,QAAQA,CAAA;IACb,OAAOO,cAAc,CAACW,OAAO,CAAC5B,WAAW,CAACE,IAAI,CAAC;EACjD;EAEO2B,UAAUA,CAAA;IACfZ,cAAc,CAACa,KAAK,EAAE;EACxB;EAEA,IAAIC,SAASA,CAAA;IACX,OAAO,IAAI,CAACxB,UAAU,CAACyB,YAAY,EAAE;EACvC;EAEAC,UAAUA,CAAA;IACR,IAAI,CAAC1B,UAAU,CAAC2B,IAAI,EAAE;EACxB;EACOC,OAAOA,CAAA;IACZ,MAAMC,UAAU,GAAGnB,cAAc,CAACW,OAAO,CAAC5B,WAAW,CAACI,IAAI,CAAC,IAAI,IAAI;IACnE,OAAOe,IAAI,CAACkB,KAAK,CAACD,UAAU,CAAC;EAC/B;EAAC,QAAAE,EAAA,G;qBA1DUtC,WAAW,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX3C,WAAW;IAAA4C,OAAA,EAAX5C,WAAW,CAAA6C,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}