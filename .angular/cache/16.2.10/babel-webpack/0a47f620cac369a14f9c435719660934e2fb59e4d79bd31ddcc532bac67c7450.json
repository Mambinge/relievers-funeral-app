{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    showSuccess(message) {\n      this.showAlert('success', message);\n    }\n    showError(message) {\n      this.showAlert('danger', message);\n    }\n    showInfo(message) {\n      this.showAlert('info', message);\n    }\n    showAlert(type, message) {\n      // You may need to adapt this based on Flowbite's alert implementation\n      const alert = document.createElement('div');\n      alert.className = `alert alert-${type} alert-dismissible fade show`;\n      alert.innerHTML = `\n      <strong>${type.charAt(0).toUpperCase() + type.slice(1)}!</strong> ${message}\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    `;\n      document.body.appendChild(alert);\n      // Adjust the duration to match your Flowbite alert behavior\n      setTimeout(() => {\n        alert.remove();\n      }, 5000); // Remove the alert after 5 seconds (adjust as needed)\n    }\n    static #_ = this.ɵfac = function AlertService_Factory(t) {\n      return new (t || AlertService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AlertService,\n      factory: AlertService.ɵfac,\n      providedIn: 'root' // It will inject this provider at the root level of the application so it can be accessed anywhere.\n    });\n  }\n  return AlertService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}