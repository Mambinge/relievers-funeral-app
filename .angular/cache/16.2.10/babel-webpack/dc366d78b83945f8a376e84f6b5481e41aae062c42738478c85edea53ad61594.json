{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Status } from 'src/app/models/policy-status';\nexport let UpdatePolicyComponent = class UpdatePolicyComponent {\n  constructor(spinner, route, router, fb, service) {\n    this.spinner = spinner;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.service = service;\n    this.statusOptions = Object.values(Status);\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const policyId = params['id'];\n      this.policyId = policyId;\n      this.policy = this.getPolicy(policyId);\n    });\n    this.policyForm = this.fb.group({\n      name: [''],\n      description: [''],\n      status: ['']\n    });\n  }\n  getPolicy(policyId) {\n    this.service.getFromUrl(`policies/${policyId}`).subscribe(x => this.policyForm.patchValue(x));\n  }\n  ngOnChanges(changes) {\n    if ('policyId' in changes) {\n      this.fetchPolicy(this.policyId);\n    }\n  }\n  fetchPolicy(policyId) {\n    if (this.policyId) {\n      this.service.getFromUrl(`policies/${policyId}`).subscribe(res => {\n        this.policyData = res;\n        this.policyForm.patchValue({\n          name: this.policyData.name,\n          description: this.policyData.description,\n          status: this.policyData.status\n        });\n      });\n    }\n  }\n  onSubmit(event) {\n    event.preventDefault();\n    if (this.policyForm.valid) {\n      this.spinner.show();\n      this.service.updateToUrl(`policies/${this.policyId}`, this.policyForm.value).subscribe(res => {\n        this.data = res;\n        this.spinner.hide();\n        this.router.navigate(['/policies']);\n      });\n    }\n  }\n};\nUpdatePolicyComponent = __decorate([Component({\n  selector: 'app-update-policy',\n  templateUrl: './update-policy.component.html',\n  styleUrls: ['./update-policy.component.css']\n})], UpdatePolicyComponent);","map":{"version":3,"names":["Component","Status","UpdatePolicyComponent","constructor","spinner","route","router","fb","service","statusOptions","Object","values","ngOnInit","params","subscribe","policyId","policy","getPolicy","policyForm","group","name","description","status","getFromUrl","x","patchValue","ngOnChanges","changes","fetchPolicy","res","policyData","onSubmit","event","preventDefault","valid","show","updateToUrl","value","data","hide","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mambi\\OneDrive\\Documents\\Personal\\Angular\\richo\\relievers-funeral-app\\src\\app\\ui\\policy\\update-policy\\update-policy.component.ts"],"sourcesContent":["import { Component, Input, SimpleChanges } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Status } from 'src/app/models/policy-status';\nimport { ApiService } from 'src/app/shared/services';\n\n@Component({\n  selector: 'app-update-policy',\n  templateUrl: './update-policy.component.html',\n  styleUrls: ['./update-policy.component.css']\n})\nexport class UpdatePolicyComponent {\n  policyForm!: FormGroup;\n  statusOptions = Object.values(Status);\n  data: any\n  policy:any;\n  policyData:any\n  // @Input() policyId!: any;\n  policyId:any\n\n  constructor(private spinner: NgxSpinnerService, private route: ActivatedRoute,\n    private router: Router, private fb: FormBuilder, private service: ApiService) {\n  } \n\n\n  ngOnInit() {\n    this.route.params.subscribe((params : any) => {\n      const policyId = params['id'];\n      this.policyId = policyId\n      this.policy = this.getPolicy(policyId);\n    });\n\n    this.policyForm = this.fb.group({\n      name: [''], // Set initial value here\n      description: [''],\n      status: ['']\n    });\n  }\n\n  getPolicy(policyId:any){\n    this.service.getFromUrl(`policies/${policyId}`)\n    .subscribe(x => this.policyForm.patchValue(x))\n  }\n  \n  ngOnChanges(changes: SimpleChanges) {\n    if ('policyId' in changes) {\n      this.fetchPolicy(this.policyId);\n    }\n  }\n\n\n\n\n    fetchPolicy(policyId:number) {\n      if (this.policyId) {\n        this.service.getFromUrl(`policies/${policyId}`).subscribe((res) => {\n          this.policyData = res;\n          this.policyForm.patchValue({\n            name: this.policyData.name,\n            description: this.policyData.description,\n            status: this.policyData.status\n          });            \n        });\n      }\n    }\n\n  onSubmit(event: Event) {\n    event.preventDefault(); \n    if (this.policyForm.valid) { \n      this.spinner.show()\n      this.service.updateToUrl(`policies/${this.policyId}`, this.policyForm.value).subscribe((res) => {\n        this.data = res;\n        this.spinner.hide()\n        this.router.navigate(['/policies']);\n      });\n    }\n  }\n\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA8B,eAAe;AAI/D,SAASC,MAAM,QAAQ,8BAA8B;AAQ9C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAShCC,YAAoBC,OAA0B,EAAUC,KAAqB,EACnEC,MAAc,EAAUC,EAAe,EAAUC,OAAmB;IAD1D,KAAAJ,OAAO,GAAPA,OAAO;IAA6B,KAAAC,KAAK,GAALA,KAAK;IACnD,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,OAAO,GAAPA,OAAO;IARlE,KAAAC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACV,MAAM,CAAC;EASrC;EAGAW,QAAQA,CAAA;IACN,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAAED,MAAY,IAAI;MAC3C,MAAME,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC7B,IAAI,CAACE,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC;IACxC,CAAC,CAAC;IAEF,IAAI,CAACG,UAAU,GAAG,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;EACJ;EAEAL,SAASA,CAACF,QAAY;IACpB,IAAI,CAACP,OAAO,CAACe,UAAU,CAAC,YAAYR,QAAQ,EAAE,CAAC,CAC9CD,SAAS,CAACU,CAAC,IAAI,IAAI,CAACN,UAAU,CAACO,UAAU,CAACD,CAAC,CAAC,CAAC;EAChD;EAEAE,WAAWA,CAACC,OAAsB;IAChC,IAAI,UAAU,IAAIA,OAAO,EAAE;MACzB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACb,QAAQ,CAAC;;EAEnC;EAKEa,WAAWA,CAACb,QAAe;IACzB,IAAI,IAAI,CAACA,QAAQ,EAAE;MACjB,IAAI,CAACP,OAAO,CAACe,UAAU,CAAC,YAAYR,QAAQ,EAAE,CAAC,CAACD,SAAS,CAAEe,GAAG,IAAI;QAChE,IAAI,CAACC,UAAU,GAAGD,GAAG;QACrB,IAAI,CAACX,UAAU,CAACO,UAAU,CAAC;UACzBL,IAAI,EAAE,IAAI,CAACU,UAAU,CAACV,IAAI;UAC1BC,WAAW,EAAE,IAAI,CAACS,UAAU,CAACT,WAAW;UACxCC,MAAM,EAAE,IAAI,CAACQ,UAAU,CAACR;SACzB,CAAC;MACJ,CAAC,CAAC;;EAEN;EAEFS,QAAQA,CAACC,KAAY;IACnBA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI,IAAI,CAACf,UAAU,CAACgB,KAAK,EAAE;MACzB,IAAI,CAAC9B,OAAO,CAAC+B,IAAI,EAAE;MACnB,IAAI,CAAC3B,OAAO,CAAC4B,WAAW,CAAC,YAAY,IAAI,CAACrB,QAAQ,EAAE,EAAE,IAAI,CAACG,UAAU,CAACmB,KAAK,CAAC,CAACvB,SAAS,CAAEe,GAAG,IAAI;QAC7F,IAAI,CAACS,IAAI,GAAGT,GAAG;QACf,IAAI,CAACzB,OAAO,CAACmC,IAAI,EAAE;QACnB,IAAI,CAACjC,MAAM,CAACkC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACrC,CAAC,CAAC;;EAEN;CAGD;AApEYtC,qBAAqB,GAAAuC,UAAA,EALjCzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW1C,qBAAqB,CAoEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}