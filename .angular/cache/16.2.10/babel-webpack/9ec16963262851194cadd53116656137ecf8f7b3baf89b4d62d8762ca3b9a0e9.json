{"ast":null,"code":"import { Status } from 'src/app/models/policy-status';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/shared/services\";\nimport * as i5 from \"@angular/common\";\nfunction UpdatePlanComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const policy_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", policy_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(policy_r2.name);\n  }\n}\nfunction UpdatePlanComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r3);\n  }\n}\nexport let UpdatePlanComponent = /*#__PURE__*/(() => {\n  class UpdatePlanComponent {\n    constructor(spinner, route, router, fb, service) {\n      this.spinner = spinner;\n      this.route = route;\n      this.router = router;\n      this.fb = fb;\n      this.service = service;\n      this.statusOptions = Object.values(Status);\n      this.planOptions = [];\n      this.planOption = [];\n    }\n    ngOnInit() {\n      this.service.getFromUrl(`policies`).subscribe(res => {\n        this.planOptions = res.content;\n        this.route.params.subscribe(params => {\n          const planId = params['id'];\n          this.planId = planId;\n          this.plan = this.getPlan(planId);\n        });\n      });\n      this.planForm = this.fb.group({\n        name: '',\n        description: '',\n        status: '',\n        policyId: ''\n      });\n    }\n    getPlan(planId) {\n      if (planId) {\n        this.service.getFromUrl(`plan/${planId}`).pipe(first()).subscribe(x => this.planForm.patchValue(x));\n      }\n    }\n    onSubmit(event) {\n      event.preventDefault();\n      if (this.planForm.valid) {\n        this.spinner.show();\n        this.service.updateToUrl(`plan/${this.planId}`, this.planForm.value).subscribe(res => {\n          this.data = res;\n          this.spinner.hide();\n          this.router.navigate(['/plans']);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function UpdatePlanComponent_Factory(t) {\n      return new (t || UpdatePlanComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ApiService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdatePlanComponent,\n      selectors: [[\"app-update-plan\"]],\n      inputs: {\n        planId: \"planId\"\n      },\n      decls: 29,\n      vars: 3,\n      consts: [[1, \"relative\", \"bg-white\", \"rounded-lg\", \"shadow\", \"dark:bg-gray-700\"], [1, \"flex\", \"items-center\", \"justify-between\", \"p-4\", \"md:p-5\", \"border-b\", \"rounded-t\", \"dark:border-gray-600\"], [1, \"text-lg\", \"font-semibold\", \"text-gray-900\", \"dark:text-white\"], [1, \"p-4\", \"md:p-5\", 3, \"formGroup\", \"submit\"], [1, \"grid\", \"gap-6\", \"mb-6\", \"md:grid-cols-2\"], [1, \"col-span-2\"], [\"for\", \"name\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"text\", \"value\", \"name\", \"formControlName\", \"name\", \"name\", \"name\", \"id\", \"name\", \"placeholder\", \"Type plan name\", \"required\", \"\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-primary-600\", \"focus:border-primary-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-primary-500\", \"dark:focus:border-primary-500\"], [\"for\", \"status\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"formControlName\", \"policyId\", \"id\", \"status\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"status\", \"id\", \"status\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [\"for\", \"description\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Write description here\", 1, \"block\", \"p-2.5\", \"w-full\", \"text-sm\", \"text-gray-900\", \"bg-gray-50\", \"rounded-lg\", \"border\", \"border-gray-300\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"dark:bg-gray-600\", \"dark:border-gray-500\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [\"type\", \"submit\", 1, \"text-white\", \"inline-flex\", \"items-center\", \"bg-purple-700\", \"hover:bg-purple-800\", \"focus:ring-4\", \"focus:outline-none\", \"focus:ring-blue-300\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"px-5\", \"py-2.5\", \"text-center\", \"dark:bg-blue-600\", \"dark:hover:bg-blue-700\", \"dark:focus:ring-blue-800\"], [\"fill\", \"currentColor\", \"viewBox\", \"0 0 20 20\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"me-1\", \"-ms-1\", \"w-5\", \"h-5\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\", \"clip-rule\", \"evenodd\"], [3, \"value\"]],\n      template: function UpdatePlanComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h3\", 2);\n          i0.ɵɵtext(4, \" Update Plan \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"form\", 3);\n          i0.ɵɵlistener(\"submit\", function UpdatePlanComponent_Template_form_submit_5_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Select a Policy\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"select\", 9);\n          i0.ɵɵtemplate(15, UpdatePlanComponent_option_15_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 8);\n          i0.ɵɵtext(18, \"Select a status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 11);\n          i0.ɵɵtemplate(20, UpdatePlanComponent_option_20_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 12);\n          i0.ɵɵtext(23, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"textarea\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 14);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(26, \"svg\", 15);\n          i0.ɵɵelement(27, \"path\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(28, \" Update \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.planForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.planOption);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.statusOptions);\n        }\n      },\n      dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n  return UpdatePlanComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}