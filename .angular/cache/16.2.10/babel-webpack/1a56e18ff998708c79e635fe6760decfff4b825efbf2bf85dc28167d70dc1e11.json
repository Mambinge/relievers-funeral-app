{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AlertService {\n  showSuccess(message) {\n    this.showAlert('success', message);\n  }\n  showError(message) {\n    this.showAlert('danger', message);\n  }\n  showInfo(message) {\n    this.showAlert('info', message);\n  }\n  showAlert(type, message) {\n    // You may need to adapt this based on Flowbite's alert implementation\n    const alert = document.createElement('div');\n    alert.className = `alert alert-${type} alert-dismissible fade show`;\n    alert.innerHTML = `\n      <strong>${type.charAt(0).toUpperCase() + type.slice(1)}!</strong> ${message}\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    `;\n    document.body.appendChild(alert);\n    // Adjust the duration to match your Flowbite alert behavior\n    setTimeout(() => {\n      alert.remove();\n    }, 5000); // Remove the alert after 5 seconds (adjust as needed)\n  }\n  static #_ = this.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac,\n    providedIn: 'root' // It will inject this provider at the root level of the application so it can be accessed anywhere.\n  });\n}","map":{"version":3,"names":["AlertService","showSuccess","message","showAlert","showError","showInfo","type","alert","document","createElement","className","innerHTML","charAt","toUpperCase","slice","body","appendChild","setTimeout","remove","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mambi\\OneDrive\\Documents\\Personal\\Angular\\richo\\relievers-funeral-app\\src\\app\\shared\\services\\alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root' // It will inject this provider at the root level of the application so it can be accessed anywhere.\r\n})\r\nexport class AlertService {\r\n  showSuccess(message: string): void {\r\n    this.showAlert('success', message);\r\n  }\r\n\r\n  showError(message: string): void {\r\n    this.showAlert('danger', message);\r\n  }\r\n\r\n  showInfo(message: string): void {\r\n    this.showAlert('info', message);\r\n  }\r\n\r\n  private showAlert(type: string, message: string): void {\r\n    // You may need to adapt this based on Flowbite's alert implementation\r\n    const alert = document.createElement('div');\r\n    alert.className = `alert alert-${type} alert-dismissible fade show`;\r\n    alert.innerHTML = `\r\n      <strong>${type.charAt(0).toUpperCase() + type.slice(1)}!</strong> ${message}\r\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    `;\r\n\r\n    document.body.appendChild(alert);\r\n\r\n    // Adjust the duration to match your Flowbite alert behavior\r\n    setTimeout(() => {\r\n      alert.remove();\r\n    }, 5000); // Remove the alert after 5 seconds (adjust as needed)\r\n  }\r\n}"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EACvBC,WAAWA,CAACC,OAAe;IACzB,IAAI,CAACC,SAAS,CAAC,SAAS,EAAED,OAAO,CAAC;EACpC;EAEAE,SAASA,CAACF,OAAe;IACvB,IAAI,CAACC,SAAS,CAAC,QAAQ,EAAED,OAAO,CAAC;EACnC;EAEAG,QAAQA,CAACH,OAAe;IACtB,IAAI,CAACC,SAAS,CAAC,MAAM,EAAED,OAAO,CAAC;EACjC;EAEQC,SAASA,CAACG,IAAY,EAAEJ,OAAe;IAC7C;IACA,MAAMK,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3CF,KAAK,CAACG,SAAS,GAAG,eAAeJ,IAAI,8BAA8B;IACnEC,KAAK,CAACI,SAAS,GAAG;gBACNL,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,cAAcZ,OAAO;;KAE5E;IAEDM,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,KAAK,CAAC;IAEhC;IACAU,UAAU,CAAC,MAAK;MACdV,KAAK,CAACW,MAAM,EAAE;IAChB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ;EAAC,QAAAC,CAAA,G;qBA5BUnB,YAAY;EAAA;EAAA,QAAAoB,EAAA,G;WAAZpB,YAAY;IAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;IAAAC,UAAA,EAFX,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}